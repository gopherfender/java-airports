@startuml Airport
    class Airport {
        String name
        String code
        HashMap Terminals
        HashMap departureMap
        getName()
        getCode()
        getTerminal()
        getAllTerminals()
        getDepartureMap()
        getCorrectTerminal()   
        sendPassengerToTerminal()
        createPlane()
        }

        class Terminal {
        int terminalNumber
        HashMap<Interger, Gate> gates
        ArrayList<Passenger> uncheckedPassengers
        getTerminalNumber()
        getAllGates()
        getGate()
        addUncheckedPassenger()
        getUncheckedPassengers()
        sendPassengersToGate()
        sendBaggageToPlane()
    }
        class Gate {
        int gateNumber
        ArrayList<Passenger> Passengers
        Plane plane
        addPassenger()
        setPlane()
        getPlane()
    }  
        class Plane {
        String planeType
        String registration
        HashMap<String, Seat> seatList 
        ArrayList<Bag> holdBaggage
        String[] seatColumns
        getBaggage()
        addBag()
        getSeats()
        getSeat()
        boardPassenger()
        Arrival() - TBC
        Departure() - TBC
    }
        class Seat {
        char seatColumn
        int seatRow
        String seatType
        Passenger Passenger
        seatPassenger()
        getSeatNumber()
        getPassenger()
    }
    class Passenger {
        String Forename
        String Surname
        ArrayList<Bag> baggage 
        int passportNumber
        String destination
        Boardingpass boardingPass
        addBag()
        getBags()
        getName()
        checkIn()
        setBoardingPass()
        getBoardingPass()
        getDestination()
    }
    class Bag {
        int weight
        string bagId
        getWeight()
    }
    class BoardingPass {
        String destination
        String Departure
        String seatNumber
        getSeatNumber()
    }
    class CrewMember {
        String name
        String position
        int staffNumber
    }






    Airport --> Passenger : createPassenger()
    Terminal *-- Airport : sendPassengerToTerminal()
    Gate *-- Terminal  : sendPassengerToGate()
    Passenger o-- Bag
    CrewMember o-- Bag
    Seat *-- Plane
    CrewMember -- Plane
    Plane -- Terminal : sendBaggageToPlane()
    Plane -- Gate : boardPassengers()
    Passenger *-- BoardingPass


    @enduml